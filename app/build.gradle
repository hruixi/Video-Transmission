apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    repositories {
        flatDir {
            dirs 'libs'
            // 子模块所依赖的库
//            dirs project(':lib_yitu').file('libs')
        }
    }

    defaultConfig {
        applicationId "com.starwin.cashloanv2"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        ndk {
            abiFilters "armeabi", "arm64-v8a" /*, "armeabi-v7a",  "mips", "x86"*/
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            // 显示Log
            debuggable true
            versionNameSuffix "-debug"
            //混淆
            minifyEnabled false
            //拆分dex
            multiDexEnabled true
            zipAlignEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            // 不显示Log
            debuggable false
            //混淆
            minifyEnabled true
            //拆分dex
            multiDexEnabled true
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
//            signingConfig signingConfigs.release
            aaptOptions.cruncherEnabled = false
            aaptOptions.useNewCruncher = false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // 数据绑定库
    dataBinding {
        enabled = true
    }
    // 视图绑定——只是替换掉findViewById()
//    viewBinding {
//        enabled = true
//    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //AndroidX
    implementation 'androidx.appcompat:appcompat:1.2.0'
    //约束布局
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    //Unit Test
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // 图片加载
    implementation "com.github.bumptech.glide:glide:$rootProject.ext.glideSdkVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.ext.glideSdkVersion"
    implementation "com.github.bumptech.glide:okhttp3-integration:$rootProject.ext.glideSdkVersion"
    // tools
    implementation "org.greenrobot:eventbus:3.1.1"    //eventBus
    // cameraX
    implementation "androidx.camera:camera-camera2:$rootProject.ext.camerax_version"
    // 添加 CameraX Camera2 API 互操作支持
    implementation "androidx.camera:camera-core:$rootProject.ext.camerax_version"
    implementation "androidx.camera:camera-lifecycle:$rootProject.ext.camerax_version"
    implementation "androidx.camera:camera-view:1.0.0-alpha18"
    implementation "androidx.camera:camera-extensions:1.0.0-alpha18"

    // Jetpack的Lifecycle以及ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel:$rootProject.ext.lifecycle_version"
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-livedata:$rootProject.ext.lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-runtime:$rootProject.ext.lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$rootProject.ext.lifecycle_version"
    // Saved state module for ViewModel
//    // Annotation processor
//    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$rootProject.ext.lifecycle_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version"
    // jetpack导航框架
    implementation "androidx.navigation:navigation-fragment:$rootProject.ext.navigation_version"
    implementation "androidx.navigation:navigation-ui:$rootProject.ext.navigation_version"
    // Jetpack的paging框架
    implementation "androidx.paging:paging-runtime:$paging_version" //Kotlin用paging-runtime-ktx
    // RxJava support
    implementation "androidx.paging:paging-rxjava2:$paging_version" // Kotlin用paging-rxjava2-ktx


    // retrofit2 + okhttp3
    implementation "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitSdkVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofitSdkVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava:$rootProject.ext.retrofitSdkVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.ext.retrofitSdkVersion"
    implementation "com.squareup.okhttp:okhttp-urlconnection:2.7.5"
    implementation "com.squareup.okhttp3:okhttp:$rootProject.ext.okhttp3SdkVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.okhttp3SdkVersion"

    // rx2
    implementation 'io.reactivex.rxjava2:rxjava:2.2.16'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation "com.trello.rxlifecycle2:rxlifecycle:$rootProject.ext.rxlifecycle2SdkVersion"
    implementation "com.trello.rxlifecycle2:rxlifecycle-android:$rootProject.ext.rxlifecycle2SdkVersion"
    implementation "com.trello.rxlifecycle2:rxlifecycle-components:$rootProject.ext.rxlifecycle2SdkVersion"

    // tools
    implementation "org.greenrobot:eventbus:3.1.1"    //eventBus

    // RxJava的衍生库
    implementation "com.github.tbruyelle:rxpermissions:0.10.2"  //使用RxPermission
    implementation 'com.github.VictorAlbertos:RxActivityResult:0.4.5-2.x'  // 使用RxActivityResult
}
